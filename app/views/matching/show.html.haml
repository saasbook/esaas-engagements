!!!
%html
  %head
    = stylesheet_link_tag "matching"

    %h1.jumbotron.header.p-5
      Matching - #{@engagement.team_number}
    %div.help-block.ml-5
      #{Matching.find_last_edit_user(@matching, @engagement)}
    %div.button.btn-dark.pull-right.h6.mr-5.my-0{"data-toggle" => "tooltip", "data-placement"=>"left", :title => "You can submit multiple times before deadline"}
      .tick.submit
        Submit
    - if not current_user&.student?
      %div.btn.button.pull-left.my-2
        = link_to "Back", matching_progress_path(matching_id: @matching.id), :class => "btn btn-danger"


    %body
      .container
      .card-columns.d-flex.justify-content-center
        %div.card.mt-5.w-25
          %div.card-body
            %h3.pl-3
              Ranking
              .help-block.h4
                Your Preference

              %ul.pt-3{:style => "list-style: none; padding-left: 0", :id => "rank"}
                - count = -1
                - @currentPreference.each do |currentPreference|
                  - count += 1
                  - if count == 0 then
                    %li.mt-2{"data-toggle" => "tooltip", "data-placement"=>"left", :title => "Most Preferred"}
                      %div.card.mb-5
                        %div.card-header.bg-secondary.text-light
                          Rank
                          = count+1
                        %div.card-body
                          %blockquote.blockquote.mb-0
                            %p.rank
                              = @currentPreference[count]
                  - else
                    %li.mt-2
                      %div.card.mb-5
                        %div.card-header.bg-secondary.text-light
                          Rank
                          = count+1
                        %div.card-body
                          %blockquote.blockquote.mb-0
                            %p.rank
                              = @currentPreference[count]
                  -# - content_for :list do

        %div.card.mt-5
          %div.card-body
            %h3.pr-5.text-right
              Matching
              .help-block.h4
                %i.fas.fa-exclamation-circle
                Drag projects below to rank them
            %ul.p-3{:style => "list-style: none;", :id => "matching"}
              - @currentPreference.each do |currentPreference|
                %li.mt-2
                  %div.card.mb-5
                    %div.card-header.bg-dark.text-light.project
                      = currentPreference
                    %div.card-body
                      %blockquote.blockquote.mb-0
                        %p
                          = @description[currentPreference]



    :javascript
      let currentRank = []
      // For sortable
      const el = document.getElementById('matching');
      const sortable = new Sortable(el, {
        animation: 150,
        // ghostClass: 'blue-background-class',
        // On sort callback render rank
        onSort: function(e) {
                  const arr = [];
                  $(".project").each((i, projectHTML) => {
                    arr.push(projectHTML.innerText);
                  });
                  $(".rank").each((i, rankName) => {
                    rankName.innerText = arr[i]
                  })
                  // Store current ranking choice in arr preparing submit
                  currentRank = arr;

                  // Change back to submit button as potentially need to save
                  if ($(".tick")[0].innerHTML !== "Submit") {
                    $(".tick")[0].innerHTML = "Submit";
                    document.querySelector('.button').classList.remove('button__circle')
                  }
                }
      });

      // For tool tip
      $(function () {
        $('[data-toggle="tooltip"]').tooltip()
      })

      // For Submit animation and submit AJAX
      let button = document.querySelector('.button');
      let buttonText = document.querySelector('.tick');
      const tickMark = "<svg width=\"58\" height=\"45\" viewBox=\"0 0 58 45\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#fff\" fill-rule=\"nonzero\" d=\"M19.11 44.64L.27 25.81l5.66-5.66 13.18 13.18L52.07.38l5.65 5.65\"/></svg>";
      buttonText.innerHTML = "Submit";

      button.addEventListener('click', async function() {
        const url = window.location.pathname.split("/");
        const engagement_id = url.pop()
        const matching_id = url[2];
        const github_uid = "#{current_user.github_uid}";


        await $.ajax({
          url: window.location.href + "/store",
          data: {
            "preference": currentRank,
            "matching_id": matching_id,
            "engagement_id": engagement_id,
            "update_by": github_uid,
            },
          type: "POST",
          success: function (data) {
            console.log("success AJAX Store")
          }
        }).then(() => {
        if (buttonText.innerHTML === "Submit") {
          buttonText.innerHTML = tickMark;
          this.classList.add('button__circle');
        }
        const userName = "#{current_user.name}";
        document.querySelector(".help-block").innerHTML = "Last updated by " + userName + " at " + new Date()
        })
      });
